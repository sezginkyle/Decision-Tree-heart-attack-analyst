import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier, export_graphviz
import graphviz

# 1. Load the dataset
df = pd.read_csv("heart.zip")

# 2. Data Cleaning and Type Conversion
df = df.dropna()  # Remove missing values
df["oldpeak"] = df["oldpeak"].astype(int)  # Convert float to int

# 3. Feature and Target Separation
X = df.drop("output", axis=1)
y = df["output"]

# 4. Train-Test Split
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.3, random_state=42
)

# 5. Train the Decision Tree Model
model = DecisionTreeClassifier()
model.fit(X_train, y_train)

# 6. Evaluate the Model
train_score = model.score(X_train, y_train)
test_score = model.score(X_test, y_test)

print(f"Train Accuracy: {train_score:.2f}")
print(f"Test Accuracy: {test_score:.2f}")

# 7. Make a Sample Prediction
sample_input = [[40, 1, 2, 140, 220, 0, 0, 160, 0, 2, 0, 0, 2]]
prediction = model.predict(sample_input)
print(f"Prediction for sample input: {prediction[0]}")

# 8. Visualize the Decision Tree
dot = export_graphviz(
    model,
    feature_names=X.columns,
    class_names=["No Disease", "Disease"],
    filled=True,
    rounded=True,
    special_characters=True
)
graph = graphviz.Source(dot)
graph.render("decision_tree_heart", format="png", cleanup=True)

